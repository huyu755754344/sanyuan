<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sanyuan.mapper.SanyuanOrderMapper" >
  <resultMap id="BaseResultMap" type="com.sanyuan.pojo.SanyuanOrder" >
    <id column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="user_num" property="userNum" jdbcType="INTEGER" />
    <result column="car_id" property="carId" jdbcType="INTEGER" />
    <result column="proid" property="proid" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="update_time" property="updateTime" jdbcType="DATE" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, user_num, car_id, proid, status, create_time, update_time, amount, remarks
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sanyuan.pojo.SanyuanOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from sanyuan_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sanyuan_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sanyuan_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sanyuan.pojo.SanyuanOrder" >
    insert into sanyuan_order (order_id, user_num, car_id, 
      proid, status, create_time, 
      update_time, amount, remarks
      )
    values (#{orderId,jdbcType=BIGINT}, #{userNum,jdbcType=INTEGER}, #{carId,jdbcType=INTEGER}, 
      #{proid,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=DATE}, 
      #{updateTime,jdbcType=DATE}, #{amount,jdbcType=DECIMAL}, #{remarks,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sanyuan.pojo.SanyuanOrder" >
    insert into sanyuan_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userNum != null" >
        user_num,
      </if>
      <if test="carId != null" >
        car_id,
      </if>
      <if test="proid != null" >
        proid,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="userNum != null" >
        #{userNum,jdbcType=INTEGER},
      </if>
      <if test="carId != null" >
        #{carId,jdbcType=INTEGER},
      </if>
      <if test="proid != null" >
        #{proid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanyuan.pojo.SanyuanOrder" >
    update sanyuan_order
    <set >
      <if test="userNum != null" >
        user_num = #{userNum,jdbcType=INTEGER},
      </if>
      <if test="carId != null" >
        car_id = #{carId,jdbcType=INTEGER},
      </if>
      <if test="proid != null" >
        proid = #{proid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=DATE},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanyuan.pojo.SanyuanOrder" >
    update sanyuan_order
    set user_num = #{userNum,jdbcType=INTEGER},
      car_id = #{carId,jdbcType=INTEGER},
      proid = #{proid,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=DATE},
      amount = #{amount,jdbcType=DECIMAL},
      remarks = #{remarks,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <select id="chackOrderByUserIdCarIdOK" resultMap="BaseResultMap">
  select * from sanyuan_order where car_id=#{carId} and user_num=#{userNum} and status=2;
  </select>
  <select id="findOrderByUserIdCarIdING" resultMap="BaseResultMap">
  select * from sanyuan_order where car_id=#{carId} and user_num =#{userNum} and status=1;
  </select>
  
</mapper>